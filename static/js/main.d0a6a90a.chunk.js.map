{"version":3,"sources":["images/backoffice.jpg","Person/Person.js","App.js","reportWebVitals.js","index.js"],"names":["Person","props","className","onClick","click","name","age","children","type","onChange","changed","value","App","state","persons","therState","switchNameHandler","newName","setState","nameChangedHandler","event","target","src","backoffice","alt","style","backgoundColor","font","border","paddin","cursor","fontSize","this","bind","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,MAA0B,uCCa1BA,G,YAVA,SAACC,GAChB,OACQ,sBAAKC,UAAU,SAAf,UACI,oBAAGC,QAASF,EAAMG,MAAlB,iBAA8BH,EAAMI,KAApC,YAAmDJ,EAAMK,OACzD,4BAAIL,EAAMM,WACV,uBAAOC,KAAK,OAAOC,SAAUR,EAAMS,QAASC,MAAOV,EAAMI,YC8DtDO,E,4MA/DbC,MAAQ,CACNC,QAAS,CACP,CAACT,KAAK,eAAgBC,IAAI,KAC1B,CAACD,KAAK,gBAAiBC,IAAI,KAE7BS,UAAW,oB,EAGbC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZJ,QAAS,CACP,CAACT,KAAK,qBAAsBC,IAAI,KAChC,CAACD,KAAMY,EAASX,IAAI,Q,EAI1Ba,mBAAqB,SAACC,GACpB,EAAKF,SAAS,CACZJ,QAAS,CACP,CAACT,KAAK,qBAAsBC,IAAI,KAChC,CAACD,KAAMe,EAAMC,OAAOV,MAAOL,IAAI,Q,uDAgBnC,OACE,qBAAKJ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,0DAIA,qBAAKoB,IAAKC,EAAYrB,UAAU,WAAWsB,IAAI,SAC/C,uBACA,wBACEC,MAlBM,CACVC,eAAe,OACfC,KAAM,UACNC,OAAQ,kBACRC,OAAQ,MACRC,OAAQ,UACRC,SAAS,OAaL5B,QAAS6B,KAAKhB,kBAAkBiB,KAAKD,KAAM,UAF7C,oBAGA,cAAC,EAAD,CACE3B,KAAM2B,KAAKnB,MAAMC,QAAQ,GAAGT,KAC5BC,IAAK0B,KAAKnB,MAAMC,QAAQ,GAAGR,MAC7B,cAAC,EAAD,CACED,KAAM2B,KAAKnB,MAAMC,QAAQ,GAAGT,KAC5BC,IAAK0B,KAAKnB,MAAMC,QAAQ,GAAGR,IAC3BF,MAAO4B,KAAKhB,kBAAkBiB,KAAKD,KAAM,eACzCtB,QAASsB,KAAKb,8B,GAxDRe,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d0a6a90a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backoffice.d3db7d69.jpg\";","import React from 'react'\nimport './Person.css'\n\nconst Person = (props) => {\nreturn (\n        <div className=\"Person\">\n            <p onClick={props.click}>I'm {props.name} and I'm {props.age}</p>\n            <p>{props.children}</p>\n            <input type=\"text\" onChange={props.changed} value={props.name}/>\n        </div>\n    )\n}\n\nexport default Person;","import backoffice from './images/backoffice.jpg';\nimport './App.css';\nimport Person from './Person/Person';\nimport React, {Component} from 'react';\n\n\nclass App extends Component {\n  state = {\n    persons: [\n      {name:'Original Max', age:560},\n      {name:'original J0J0', age:59}\n    ],\n    therState: 'some other state'\n  }\n\n  switchNameHandler = (newName) =>{\n    this.setState({\n      persons: [\n        {name:'Changed state Fiki', age:561},\n        {name: newName, age:60}\n      ]\n    })\n  }\n  nameChangedHandler = (event) =>{\n    this.setState({\n      persons: [\n        {name:'Changed state Miki', age:661},\n        {name: event.target.value, age:60}\n      ]\n    })\n  }\n\n  \n\n  render() {\n    const style = {\n        backgoundColor:\"pink\",\n        font: 'inherit',\n        border: '1px solid black',\n        paddin: '8px',\n        cursor: 'pointer',\n        fontSize:'2em'\n      }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>\n            Welcome to BackOffice ;)\n          </h1>\n        \n          <img src={backoffice} className=\"App-logo\" alt=\"logo\" />\n          <br/>\n          <button\n            style={style}\n            onClick={this.switchNameHandler.bind(this, 'Button')}>Log In</button>\n          <Person \n            name={this.state.persons[0].name} \n            age={this.state.persons[0].age}/>\n          <Person \n            name={this.state.persons[1].name} \n            age={this.state.persons[1].age}\n            click={this.switchNameHandler.bind(this, 'Cllck event')}\n            changed={this.nameChangedHandler}/>\n        \n        </header>\n      </div>\n    ); \n  }\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}